name: Build and run unittests

on:
  push:
    branches: [ main, ml/** ]

  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install build dependencies
        run: sudo apt-get install ninja-build libcurl4-openssl-dev libcmocka-dev

      - name: Install build-wrapper
        run: |
          wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip -O /tmp/build-wrapper-linux-x86.zip
          mkdir ~/opt/
          unzip /tmp/build-wrapper-linux-x86.zip -d ~/opt/

      - name: Configure CMake
        working-directory: ${{github.workspace}}/tests
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -GNinja -B ${{github.workspace}}/tests/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        working-directory: ${{github.workspace}}/tests
        run: ~/opt/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output cmake --build ${{github.workspace}}/tests/build --config ${{env.BUILD_TYPE}}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
